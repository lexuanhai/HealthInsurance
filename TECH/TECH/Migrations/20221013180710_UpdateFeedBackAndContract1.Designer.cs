// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TECH.Data.DatabaseEntity;

#nullable disable

namespace TECH.Migrations
{
    [DbContext(typeof(DataBaseEntityContext))]
    [Migration("20221013180710_UpdateFeedBackAndContract1")]
    partial class UpdateFeedBackAndContract1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TECH.Data.DatabaseEntity.AdminLogin", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PassWord")
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserName");

                    b.ToTable("AdminLogin");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.CompanyDetails", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CompanyURL")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("varchar(20)");

                    b.HasKey("CompanyId");

                    b.ToTable("CompanyDetails");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContractNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmailId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Message")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Subject")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.EmpRegister", b =>
                {
                    b.Property<int>("Empno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Empno"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("City")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ContactNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Designation")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PassWord")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyStatus")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("State")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Empno");

                    b.ToTable("EmpRegister");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.FeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("EmailId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Feedback")
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FeedBack");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.HospitalInfo", b =>
                {
                    b.Property<string>("HospitalId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("HospitalName")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Url")
                        .HasColumnType("varchar(50)");

                    b.HasKey("HospitalId");

                    b.ToTable("HospitalInfo");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.Policies", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,0)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Emi")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("HospitalId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PolicyDesc")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PolicyName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("PolicyId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.PoliciesonEmployees", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("EMI")
                        .HasColumnType("decimal(10,0)");

                    b.Property<int?>("Empno")
                        .HasColumnType("int");

                    b.Property<string>("Medical")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Penddate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PolcyId")
                        .HasColumnType("int");

                    b.Property<string>("PolcyName")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("PolicyAmount")
                        .HasColumnType("decimal(10,0)");

                    b.Property<decimal?>("PolicyDuration")
                        .HasColumnType("decimal(10,0)");

                    b.Property<DateTime?>("PstartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PoliciesonEmployees");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.PolicyApprovalDetails", b =>
                {
                    b.Property<int>("PolcyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolcyId"), 1L, 1);

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,0)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("char(3)");

                    b.HasKey("PolcyId");

                    b.ToTable("PolicyApprovalDetails");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.PolicyRequestDetails", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Emi")
                        .HasColumnType("decimal(10,0)");

                    b.Property<int?>("Empno")
                        .HasColumnType("int");

                    b.Property<int?>("PoicyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("PolicyAmount")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("PolicyName")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)");

                    b.HasKey("RequestId");

                    b.ToTable("PolicyRequestDetails");
                });

            modelBuilder.Entity("TECH.Data.DatabaseEntity.PolicyTotalDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("EMI")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("MedicalId")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("PolicyAmount")
                        .HasColumnType("decimal(10,0)");

                    b.Property<string>("PolicyDes")
                        .HasColumnType("varchar(250)");

                    b.Property<int?>("PolicyDurationinMonths")
                        .HasColumnType("int");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("int");

                    b.Property<string>("PolicyName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PolicyTotalDescription");
                });
#pragma warning restore 612, 618
        }
    }
}
